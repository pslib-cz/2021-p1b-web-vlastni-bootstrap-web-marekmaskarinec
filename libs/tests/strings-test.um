
import (
	"../std.um"
	"../strings.um"
)

fn main() {
	std.println("--split---------------")
	std.println("strings.split(\"this is a test\", \" \") => " + repr(strings.split("this is a test", " ")))

	std.println("--replace-------------")
	std.println("strings.replace(\"this is a test\", \" \", \"\\n\") =>\n" + strings.replace("this is a test", " ", "\n"))

	std.println("--toupper-------------")
	std.println("strings.toupper(\"this is a test\") => " + strings.toupper("this is a test"))

	std.println("--tolower-------------")
	std.println("strings.tolower(\"THIS IS A TEST\") => " + strings.tolower("THIS IS A TEST"))

	std.println("--sslice--------------")
	std.println("strings.sslice(\"this is a test\", 2, 8) => " + strings.sslice("this is a test", 2, 8))

	std.println("--join---------------")
	std.println("strings.join(\"[]str{\"this\", \"is\", \"a\", \"test\"}\", \" \") => " + strings.join([]str{"this", "is", "a", "test"}, " "))

	std.println("--contains--------------")
	std.println("strings.contains(\"this is a test\", \"is a\") => " + repr(strings.contains("this is a test", "is a")))
	std.println("strings.contains(\"this is a test\", \"is_a\") => " + repr(strings.contains("this is a test", "is_a")))

	std.println("--trimspaces------------")
	std.println("strings.trimspaces(\"  there are some whitespaces  \") => " + strings.trimspaces("  there are some whitespaces  "))

	std.println("--trimsuffix------------")
	std.println("strings.trimsuffix(\"strings.um\", \".um\") => " + strings.trimsuffix("strings.um", ".um"))
}
